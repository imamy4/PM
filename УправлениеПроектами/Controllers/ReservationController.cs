using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

using УправлениеБД;
using ДизайнерЗала.ПредставленияЗала;
using ДизайнерЗала.СоздателиСхемЗалов.Xml;
using ДизайнерЗала.ГенераторыРазметки.Html;
using СистемаРезервированияБилетов.Models.Резервирование;
using СистемаРезервированияБилетов.Models.Резервирование.ДополнителиHtmlРазметки;

namespace СистемаРезервированияБилетов.Controllers
{
    public class ReservationController : BaseController
    {
        //
        // GET: /Reservation/
        
        [HttpGet]
        public ActionResult Reservation(int id)
        {
            Событие событие = МенеджерБД.События.FirstOrDefault(s => s.Id == id);

            return View(new ДанныеРезервирования(событие));
        }

        [HttpPost]
        public ActionResult Reservation(ДанныеРезервирования данныеРезервирования)
        {
            if (данныеРезервирования.ТекущийСтатус == СтатусРезервирования.Подтверждено)
            {
                Событие событие = МенеджерБД.События.FirstOrDefault(s => s.Id == данныеРезервирования.IdСобытия);

                bool удачно = false;
                switch (данныеРезервирования.ТекущийТипОперации)
                {
                    case ТипОперации.Бронирование: удачно = событие.ЗабронироватьБилеты(МенеджерБД, ТекущийПользователь, данныеРезервирования.ПолучитьIdМест()); break;
                    case ТипОперации.Покупка: удачно = событие.КупитьБилеты(МенеджерБД, ТекущийПользователь, данныеРезервирования.ПолучитьIdМест()); break;
                }

                if (удачно)
                {
                    данныеРезервирования.Удачно();
                }
                else
                {
                    данныеРезервирования.Неудачно();
                }
            }

            return View(данныеРезервирования);
        }

        public ActionResult Scene(int id)
        {
            ДанныеCхемыЗала данныеCхемыЗала = null;

            Событие событие = МенеджерБД.События.FirstOrDefault(s => s.Id == id);

            Зал зал = событие.Зал;

            if (зал != null && зал.Hall != null)
            {
                БазовыйXmlСоздательСхемаЗала cоздательСхемыЗала = new БазовыйXmlСоздательСхемаЗала(зал.Hall);
                СхемаЗала схемаЗала = cоздательСхемыЗала.ПолучитьСхемуЗала();

                данныеCхемыЗала = new ДанныеCхемыЗала(new БазовыйГенераторHtmlСхемыЗала(схемаЗала), new ДополнительИнформациейПоБилетам(событие.Билет));
            }

            return View(данныеCхемыЗала);
        }

        /// <param name="idМест">idСобытия|idМест</param>
        public ActionResult Confirm(string id)
        {
            int idСобытие = int.Parse(id.Split('|')[0]);
            string idМест = id.Split('|')[1];
            Событие событие = МенеджерБД.События.FirstOrDefault(s => s.Id == idСобытие);

            ДанныеПодтверждения данныеПодтверждение = new ДанныеПодтверждения(событие, idМест);

            return View(данныеПодтверждение);
        }
    }
}
